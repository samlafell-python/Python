# Pages 147 - 153 in ATBS textbook
# Pattern Matching and Regular Expressions

## Ex... Phone Number
# 919-675-9338 <- A phone number
# 4,150,000 <- Not a phone number


##Non-RegEx Example
# def isPhoneNumber(text):
#     if len(text) != 12:
#         return False #not phone number
#     for i in range(0,3):
#         if not text[i].isdecimal():
#             return False #no area code
#     if text[3] != '-':
#          return False #missing dash
#     for i in range(4,7):
#         if not text[i].isdecimal():
#             return False #no first 3 digits
#     if text[7] != '-':
#         return False #missing second dash
#     for i in range(8,12):
#         if not text[i].isdecimal():
#             return False #missing last 4 digits
#     return True
#
# print(isPhoneNumber('919-675-9338'))
#
#
# message = 'Call me at 415-555-1011 tomorrow, or at 919-675-9338 over the weekend for my personal line'
# foundNumber = False
# for i in range(len(message)):
#     chunk = message[i:i+12]
#     if isPhoneNumber(chunk):
#         print('Phone number found:', chunk)
#         foundNumber = True
# if not foundNumber:
#     print('Could not find any phone numbers.')




# So now, let's decrease the lines of code we need for that
import re
message = 'Call me at 415-555-1011 tomorrow, or at 919-675-9338 over the weekend.'

# phoneNumRegex = re.compile(r'\d\d\d-\d\d\d-\d\d\d\d')
# mo = phoneNumRegex.search(message)
# print(mo.group())

phoneNumRegex = re.compile(r'\d\d\d-\d\d\d-\d\d\d\d')
print(phoneNumRegex.findall(message))
